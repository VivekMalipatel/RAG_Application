services:
  indexer-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8009:8009"
    depends_on:
      - unoserver
      - rabbitmq
    env_file:
      - .env
    environment:
      - UNOSERVER_HOST=unoserver
      - UNOSERVER_PORT=2003
      - DB_URL=${DB_URL}
      - LOG_LEVEL=${LOG_LEVEL}
      - INFERENCE_API_KEY=${INFERENCE_API_KEY}
      - INFERENCE_API_BASE=${INFERENCE_API_BASE}
      - VLM_MODEL=${VLM_MODEL}
      - EMBEDDING_API_KEY=${EMBEDDING_API_KEY}
      - EMBEDDING_API_BASE=${EMBEDDING_API_BASE}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL}
      - MINIO_ENDPOINT_URL=${MINIO_ENDPOINT_URL}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    volumes:
      - ./:/app
      - indexer-api-data:/app/data
  
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"      # AMQP port
      - "15672:15672"    # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    
  unoserver:
    container_name: unoserver
    image: ghcr.io/unoconv/unoserver-docker
    ports:
      - "2003:2003"
    restart: unless-stopped
  
volumes:
  indexer-api-data:
  rabbitmq_data:
